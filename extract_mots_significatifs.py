#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import pandas as pd
import re
import os
import sys

def extract_significant(name, stopwords):
    """
    Extrait les mots ‚Äúsignificatifs‚Äù d‚Äôune cha√Æne `name` en √©liminant
    tous les tokens dont la forme uppercase correspond √† une stopword.
    """
    if pd.isna(name):
        return ""
    # On r√©cup√®re tous les mots (lettres latines + accents)
    # par exemple, dans "CHU - H√¥pital Jeanne-de-Flandre,Lille(59)" 
    # on r√©cup√®re ["CHU", "H√¥pital", "Jeanne", "de", "Flandre", "Lille"]
    words = re.findall(r"[A-Za-z√Ä-√ñ√ò-√∂√∏-√ø]+", name)
    # On filtre : on ne garde que ceux qui ne sont pas dans stopwords (majuscules)
    significant = [w for w in words if w.upper() not in stopwords]
    # On recompose la cha√Æne (s√©parateur espace)
    return " ".join(significant)

def main():
    # 1) Chemin vers le fichier d‚Äôentr√©e et sortie
    input_path = "C:/Users/LeviWEBERT/OneDrive - ALBUS PARTNERS/Bureau/Scan Medecine/TABLEAU √† TRAIt√©/data_propre_ext_LP-167_Acc_Risque.xlsx"
    output_path = "C:/Users/LeviWEBERT/OneDrive - ALBUS PARTNERS/Bureau/Scan Medecine/TABLEAU √† TRAIt√©/data_propre_ext_LP-167_Acc_Risque_with_mots_significatifs.xlsx"


    if not os.path.isfile(input_path):
        print(f"‚ùå Le fichier d‚Äôentr√©e n‚Äôexiste pas : {input_path}", file=sys.stderr)
        sys.exit(1)

    # 2) Lecture du fichier Excel
    print("üîÑ Lecture du fichier Excel‚Ä¶‚Ä¶")
    try:
        df = pd.read_excel(input_path, dtype=str)
    except Exception as e:
        print(f"‚ùå Impossible de lire le fichier Excel : {e}", file=sys.stderr)
        sys.exit(1)

    # 3) D√©finition des mots g√©n√©riques √† retirer (en majuscules pour la comparaison)
    stopwords = {
        "CHU",       # Centre Hospitalier Universitaire
        "CH",        # Centre Hospitalier
        "GBU",       # Groupe Hospitalier Universitaire (voire variante)
        "H√îPITAL",   # H√¥pital (avec accent)
        "HOPITAL",   # H√¥pital (sans accent)
        "CLINIQUE",  # Clinique
        "CHI"
    }

    # 4) V√©rifier que la colonne ‚ÄúHopital‚Äù existe
    if "Nom hopital" not in df.columns:
        print("‚ùå La colonne ‚ÄúNom hopital‚Äù n‚Äôa pas √©t√© trouv√©e dans le fichier.")
        sys.exit(1)

    # 5) Application de la fonction d‚Äôextraction sur chaque ligne
    print("üîÑ Extraction des mots significatifs pour chaque h√¥pital‚Ä¶‚Ä¶")
    df["Mots significatif"] = df["Nom hopital"].apply(lambda x: extract_significant(x, stopwords))

    # 6) Aper√ßu rapide (les 10 premi√®res lignes)
    print("\nüìã Aper√ßu de la colonne ‚ÄúNom hopital‚Äù vs ‚ÄúMots significatif‚Äù :\n")
    print(df[["Nom hopital", "Mots significatif"]].head(10).to_string(index=False))

    # 7) Sauvegarde du nouveau fichier Excel
    try:
        df.to_excel(output_path, index=False)
    except Exception as e:
        print(f"‚ùå Impossible d‚Äô√©crire le fichier de sortie : {e}", file=sys.stderr)
        sys.exit(1)

    print(f"\n‚úÖ Le fichier modifi√© a √©t√© enregistr√© ici : {output_path}")

if __name__ == "__main__":
    main()
